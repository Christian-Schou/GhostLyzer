<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <RootNamespace>GhostMetrics.Web</RootNamespace>
        <AssemblyName>GhostMetrics.Web</AssemblyName>
        <InvariantGlobalization>true</InvariantGlobalization>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" />
        <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
        <PackageReference Include="NSwag.AspNetCore" />
        <PackageReference Include="NSwag.MSBuild">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="FluentValidation.AspNetCore" />
        <PackageReference Include="ZymLabs.NSwag.FluentValidation.AspNetCore" />
    </ItemGroup>

    <ItemGroup>
      <Content Include="..\..\.dockerignore">
        <Link>.dockerignore</Link>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\core\GhostMetrics.Core.Application\GhostMetrics.Core.Application.csproj" />
      <ProjectReference Include="..\GhostMetrics.Infrastructure\GhostMetrics.Infrastructure.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="wwwroot\" />
    </ItemGroup>

    <ItemGroup>
      <Content Update="wwwroot\api\specification.json">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

    <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(SkipNSwag)' != 'True' ">
        <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net80) run config.nswag /variables:Configuration=$(Configuration)">
            <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
            <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
        </Exec>

        <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
        <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
    </Target>
    
</Project>
